# version: '3.8'

services:

# ---------------------------------
  angular: # WORIKNG + LIVE RELOAD
    build:
      context: ./frontend/angular
    container_name: angular-app
    ports:
      - "4200:4200"
    volumes:
      - ./frontend/angular:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    networks:
      - pgnetwork

# ---------------------------------
  next: # WORIKNG + LIVE RELOAD
    build:
      context: ./fullstack/next
    container_name: next-app
    ports:
      - "3000:3000"
    volumes:
      - ./fullstack/next:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    networks:
      - pgnetwork

# ---------------------------------
  springboot: # WORIKNG + LIVE RELOAD
    build:
      context: ./backend/springboot
    container_name: springboot-app
    ports:
      - "8085:8085"
      - "35729:35729"
    volumes:
      - ./backend/springboot:/app
      - /app/build
    environment:
      - GRADLE_USER_HOME=/app/.gradle
      - GRADLE_OPTS=-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true
      - JAVA_OPTS=-Dspring.devtools.restart.enabled=true
    networks:
      - pgnetwork

# ---------------------------------
  django: # WORIKNG + LIVE RELOAD
    build:
      context: ./backend/django
    container_name: django-app
    ports:
      - "8000:8000"
    volumes:
      - ./backend/django:/app
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
    depends_on:
      - postgres
    networks:
      - pgnetwork

# ---------------------------------
  express: # WORIKNG + LIVE RELOAD
    build:
      context: ./backend/express
    container_name: express-app
    ports:
      - "4000:4000"
    volumes:
      - ./backend/express:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - pgnetwork

# ---------------------------------
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    networks:
      - pgnetwork

# ---------------------------------
  postgres:
    image: postgres:latest
    container_name: postgres-db
    ports:
      - "5432:5432"
    volumes:
      - ./database:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - pgnetwork


# ---------------------------------
networks:
  pgnetwork:
    driver: bridge
